<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>jdbc.properties</value>
            </list>
        </property>
    </bean>
<!--
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
-->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>

        <property name="initialPoolSize">
            <value>${jdbc.initialPoolSize}</value>
        </property>
        <property name="minPoolSize">
            <value>${jdbc.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${jdbc.maxPoolSize}</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>${jdbc.acquireRetryAttempts}</value>
        </property>
        <property name="acquireIncrement">
            <value>${jdbc.acquireIncrement}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${jdbc.idleConnectionTestPeriod}</value>
        </property>
        <property name="maxIdleTime">
            <value>${jdbc.maxIdleTime}</value>
        </property>
        <property name="maxConnectionAge">
            <value>${jdbc.maxConnectionAge}</value>
        </property>
        <property name="preferredTestQuery">
            <value>${jdbc.preferredTestQuery}</value>
        </property>
        <property name="testConnectionOnCheckin">
            <value>${jdbc.testConnectionOnCheckin}</value>
        </property>
    </bean>

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="hibernate.cfg.xml" />
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>
        <property name="lobHandler" ref="lobHandler" />
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />

    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="taskDao" class="ru.sgnhp.dao.impl.TaskDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="taskManagerService" class="ru.sgnhp.services.impl.TaskManagerServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.TaskBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="taskDao" ref="taskDao" />
    </bean>

    <bean id="uploadManagerService" class="ru.sgnhp.services.impl.UploadManagerServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.FileBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="uploadDao" ref="uploadDao" />
    </bean>

    <bean id="uploadDao" class="ru.sgnhp.dao.impl.UploadDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="outgoingFileDao" class="ru.sgnhp.dao.impl.OutgoingFileDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="outgoingFileService" class="ru.sgnhp.services.impl.OutgoingFileServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.OutgoingFileBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="outgoingFileDao" ref="outgoingFileDao" />
    </bean>

    <bean id="outgoingMailDao" class="ru.sgnhp.dao.impl.OutgoingMailDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="outgoingMailService" class="ru.sgnhp.services.impl.OutgoingMailServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.OutgoingMailBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="userDao" class="ru.sgnhp.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="userManagerService" class="ru.sgnhp.services.impl.UserManagerServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.WorkflowUserBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="documentDao" class="ru.sgnhp.dao.impl.DocumentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="documentService" class="ru.sgnhp.services.impl.DocumentServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.DocumentBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="documentDao" ref="documentDao"/>
    </bean>

    <bean id="documentFileDao" class="ru.sgnhp.dao.impl.DocumentFileDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="documentFileService" class="ru.sgnhp.services.impl.DocumentFileServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.DocumentFileBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="documentFileDao" ref="documentFileDao"/>
    </bean>

    <bean id="documentTypeDao" class="ru.sgnhp.dao.impl.DocumentTypeDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="documentTypeService" class="ru.sgnhp.services.impl.DocumentTypeServiceImpl">
        <constructor-arg>
            <bean class="ru.sgnhp.dao.impl.GenericDaoHibernate">
                <constructor-arg value="ru.sgnhp.entity.DocumentTypeBean"/>
                <property name="sessionFactory" ref="sessionFactory"/>
            </bean>
        </constructor-arg>
        <property name="documentTypeDao" ref="documentTypeDao"/>
    </bean>

</beans>